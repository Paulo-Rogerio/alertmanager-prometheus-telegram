version: '3.4'

services:
  metricasapi:
    image: fabricioveronez/metricasapi
    build:
      context: .
      dockerfile: Metricas.Api/Dockerfile
    ports: 
      - "8080:80"
    networks:
      - metricas      
    depends_on: 
      - metricasmongodb 
    environment: 
      MONGO_USERNAME: mongouser
      MONGO_PASSWORD: GPX4WOwpcvOc9Wm70gAG8It7tKA0Cy090ZVO82cEJsExogsMDY     
      MONGO_URL: metricasmongodb 

  metricasmongodb:
    image: mongo:4.2.1
    networks:
      - metricas
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: GPX4WOwpcvOc9Wm70gAG8It7tKA0Cy090ZVO82cEJsExogsMDY

  mongoexporter:
    image: fabricioveronez/mongo_exporter
    ports:
      - "9216:9216" 
    networks:
      - metricas
    depends_on: 
      - metricasmongodb       
    environment: 
      MONGODB_URI: "mongodb://mongouser:GPX4WOwpcvOc9Wm70gAG8It7tKA0Cy090ZVO82cEJsExogsMDY@metricasmongodb:27017"        

  # Fase 1 ( Inicial )
  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - metricas   
  #   depends_on: 
  #     - metricasapi  

  # alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   networks:
  #     - metricas      


  # Fase 2 ( Add Confs )
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./Prometheus/mongoDBAlertaRules.yaml:/etc/prometheus/mongoDBAlertaRules.yaml  
    networks:
      - metricas   
    depends_on: 
      - metricasapi  
      - alertmanager  

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./AlertManager/alertmanager.yaml:/prometheus/alertmanager.yml
    command:
      - '--config.file=/prometheus/alertmanager.yml'    
    ports:
      - 9093:9093
    networks:
      - metricas      

  alertmanager-bot:
    image: metalmatze/alertmanager-bot:0.4.2
    environment:
      ALERTMANAGER_URL: http://alertmanager:9093
      BOLT_PATH: /data/bot.db
      STORE: bolt
      TELEGRAM_ADMIN: '222222'
      TELEGRAM_TOKEN: xxxxxxxxx:Yyyyyyyyyyyyyyyyyyyyyyyyyyy
      TEMPLATE_PATHS: /templates/default.tmpl
    networks:
      - metricas    

  # grafana:
  #   image: fabricioveronez/grafana-appmetrics 
  #   build:
  #     context: .
  #     dockerfile: Grafana/Dockerfile     
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - metricas

networks: 
  metricas: 
    driver: bridge      
